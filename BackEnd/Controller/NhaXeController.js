const express = require('express');
const { sql, poolPromise } = require('../config/db');

const router = express.Router();

router.use(express.json());

// API Th√™m nh√† xe
router.post('/bus-company', async (req, res) => {
    try {
        console.log("üì• D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c t·ª´ client:", req.body);

        const { busCompanyID, name, phone, address } = req.body;

        if (!busCompanyID || !name || !phone || !address) {
            console.log("‚ö†Ô∏è Thi·∫øu th√¥ng tin ƒë·∫ßu v√†o!");
            return res.status(400).json({ message: 'Th√¥ng tin kh√¥ng ƒë·∫ßy ƒë·ªß' });
        }

        const pool = await poolPromise;

        // Ki·ªÉm tra ID nh√† xe ƒë√£ t·ªìn t·∫°i
        const checkBusCompanyQuery = `SELECT 1 FROM BusCompany WHERE BusCompanyID = @busCompanyID`;
        const checkBusCompanyResult = await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .query(checkBusCompanyQuery);

        if (checkBusCompanyResult.recordset.length > 0) {
            console.log("‚ö†Ô∏è M√£ nh√† xe ƒë√£ t·ªìn t·∫°i!");
            return res.status(409).json({ field: "busCompanyID", message: "M√£ nh√† xe ƒë√£ t·ªìn t·∫°i!" });
        }

        // Th√™m nh√† xe m·ªõi v√†o database
        const insertQuery = `INSERT INTO BusCompany (BusCompanyID, Name, Phone, Address) VALUES (@busCompanyID, @name, @phone, @address)`;
        console.log("üìù Th·ª±c thi truy v·∫•n SQL:", insertQuery);

        await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .input('name', sql.NVarChar, name)
            .input('phone', sql.NVarChar, phone)
            .input('address', sql.NVarChar, address)
            .query(insertQuery);

        console.log("‚úÖ Th√™m nh√† xe th√†nh c√¥ng!");
        res.status(201).json({ message: 'Th√™m nh√† xe th√†nh c√¥ng!' });

    } catch (err) {
        console.error("‚ùå L·ªói server:", err);
        res.status(500).json({ message: 'L·ªói server', error: err.message });
    }
});

// API L·∫•y th√¥ng tin nh√† xe
router.get('/bus-company', async (req, res) => {
    try {
        console.log("üì• Y√™u c·∫ßu l·∫•y danh s√°ch nh√† xe");

        const pool = await poolPromise;

        if (!pool) {
            console.error("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database");
            return res.status(500).json({ message: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database' });
        }

        const selectQuery = `SELECT BusCompanyID, Name, Phone, Address FROM BusCompany`;
        console.log("üìù Th·ª±c thi truy v·∫•n SQL:", selectQuery);

        const result = await pool.request().query(selectQuery);

        if (!result.recordset || result.recordset.length === 0) {
            console.log("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu nh√† xe");
            return res.status(404).json({ message: 'Kh√¥ng c√≥ d·ªØ li·ªáu nh√† xe' });
        }

        console.log("‚úÖ L·∫•y danh s√°ch nh√† xe th√†nh c√¥ng!");
        res.status(200).json(result.recordset);
    } catch (err) {
        console.error("‚ùå L·ªói server:", err);
        res.status(500).json({ message: 'L·ªói server', error: err.message });
    }
});

// API C·∫≠p nh·∫≠t nh√† xe
router.put('/bus-company', async (req, res) => {
    try {
        console.log("üì• D·ªØ li·ªáu c·∫≠p nh·∫≠t t·ª´ client:", req.body);

        const { busCompanyID, name, phone, address } = req.body;

        if (!busCompanyID || !name || !phone || !address) {
            console.log("‚ö†Ô∏è Thi·∫øu th√¥ng tin ƒë·∫ßu v√†o!");
            return res.status(400).json({ message: 'Th√¥ng tin kh√¥ng ƒë·∫ßy ƒë·ªß' });
        }

        const pool = await poolPromise;

        // Ki·ªÉm tra xem m√£ nh√† xe c√≥ t·ªìn t·∫°i kh√¥ng
        const checkBusCompanyQuery = `SELECT 1 FROM BusCompany WHERE BusCompanyID = @busCompanyID`;
        console.log("üîç Ki·ªÉm tra m√£ nh√† xe:", checkBusCompanyQuery);
        const checkBusCompanyResult = await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .query(checkBusCompanyQuery);

        if (checkBusCompanyResult.recordset.length === 0) {
            console.log("‚ö†Ô∏è M√£ nh√† xe kh√¥ng t·ªìn t·∫°i!");
            return res.status(404).json({ message: 'M√£ nh√† xe ch∆∞a ƒë∆∞·ª£c ƒëƒÉng k√Ω!' });
        }

        // N·∫øu t·ªìn t·∫°i, ti·∫øn h√†nh c·∫≠p nh·∫≠t
        const updateQuery = `UPDATE BusCompany SET Name = @name, Phone = @phone, Address = @address WHERE BusCompanyID = @busCompanyID`;
        console.log("üìù Th·ª±c thi truy v·∫•n SQL:", updateQuery);

        await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .input('name', sql.NVarChar, name)
            .input('phone', sql.NVarChar, phone)
            .input('address', sql.NVarChar, address)
            .query(updateQuery);

        console.log("‚úÖ C·∫≠p nh·∫≠t nh√† xe th√†nh c√¥ng!");
        res.status(200).json({ message: 'S·ª≠a nh√† xe th√†nh c√¥ng!' });

    } catch (err) {
        console.error("‚ùå L·ªói server:", err);
        res.status(500).json({ message: 'L·ªói server', error: err.message });
    }
});

// API X√≥a nh√† xe
router.delete('/bus-company/:busCompanyID', async (req, res) => {
    try {
        const { busCompanyID } = req.params;
        console.log("üóëÔ∏è Y√™u c·∫ßu x√≥a nh√† xe v·ªõi ID:", busCompanyID);

        if (!busCompanyID || busCompanyID.length !== 5) {
            console.log("‚ö†Ô∏è ID nh√† xe kh√¥ng h·ª£p l·ªá!");
            return res.status(400).json({ message: 'ID nh√† xe kh√¥ng h·ª£p l·ªá. M√£ ph·∫£i c√≥ ƒë√∫ng 5 k√Ω t·ª±.' });
        }

        const pool = await poolPromise;

        // Ki·ªÉm tra xem nh√† xe c√≥ t·ªìn t·∫°i kh√¥ng
        const checkBusCompanyQuery = `SELECT 1 FROM BusCompany WHERE BusCompanyID = @busCompanyID`;
        const checkBusCompanyResult = await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .query(checkBusCompanyQuery);

        if (checkBusCompanyResult.recordset.length === 0) {
            console.log("‚ö†Ô∏è Nh√† xe kh√¥ng t·ªìn t·∫°i!");
            return res.status(404).json({ message: 'M√£ nh√† xe kh√¥ng t·ªìn t·∫°i' });
        }

        // X√≥a nh√† xe
        const deleteQuery = `DELETE FROM BusCompany WHERE BusCompanyID = @busCompanyID`;
        console.log("üìù Th·ª±c thi truy v·∫•n SQL:", deleteQuery);

        await pool.request()
            .input('busCompanyID', sql.VarChar, busCompanyID)
            .query(deleteQuery);

        console.log("‚úÖ X√≥a nh√† xe th√†nh c√¥ng!");
        res.status(200).json({ message: 'X√≥a nh√† xe th√†nh c√¥ng!' });
    } catch (err) {
        console.error("‚ùå L·ªói server:", err);
        res.status(500).json({ message: 'L·ªói server', error: err.message });
    }
});

module.exports = router;
